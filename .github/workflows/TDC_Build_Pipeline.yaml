name: TDC_Build_pipeline

on:
  push:
    branches:
      - main
      - dev
      
  pull_request:
    branches:
      - main
      - dev
      
  workflow_dispatch:
  
env:
    DOTNETVERSION: 8.0.x 
    
jobs:
  buildWindows:
    runs-on: windows-2022
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup .NET SDK ${{env.DOTNETVERSION}}
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '${{env.DOTNETVERSION }}'

    - name: List installed .NET info
      shell: pwsh
      run: dotnet --info
      
    - name: Install .NET MAUI Workloads
      if: runner.os == 'Windows'
      shell: bash
      run: |
        dotnet nuget locals all --clear 
        dotnet workload install maui \
            --source https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet8/nuget/v3/index.json \
            --source https://api.nuget.org/v3/index.json
        dotnet workload list
    
    - name: Update Workloads
      run: dotnet workload update
    
    - name: Restore dependencies
      run: dotnet restore code/TDC/TDC/TDC.csproj
      
    - name: Build and Publish Windows App 
      run: dotnet publish code/TDC/TDC/TDC.csproj -c Release -f net8.0-windows10.0.19041.0 -o ./output/windows 

  buildAndroid:
    runs-on: windows-2022
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup .NET SDK ${{env.DOTNETVERSION}}
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '${{env.DOTNETVERSION }}'

    - name: List installed .NET info
      shell: pwsh
      run: dotnet --info

    - name: Install .NET MAUI Workloads
      if: runner.os == 'Windows'
      shell: bash
      run: |
        dotnet nuget locals all --clear 
        dotnet workload install maui android wasm-tools \
            --source https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet8/nuget/v3/index.json \
            --source https://api.nuget.org/v3/index.json
        dotnet workload list
            
    - name: Restore nuget packages
      run: dotnet restore code/TDC/TDC.sln 
        
    - name: Build Android App
      shell: bash
      run: dotnet publish code/TDC/TDC/TDC.csproj -c:Release -f:net8.0-android -o:output/android --no-restore
    
    - name: Run tests
      run: dotnet test --no-build --configuration Release ./code/TDC/TDC.sln

  trivyscan:
    runs-on: ubuntu-latest
    steps:
      - name: Repository auschecken
        uses: actions/checkout@v4
  
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@7b7aa264d83dc58691451798b4d117d53d21edfe
        with:
          scan-type: 'fs'                # Wechselt den Scan-Modus auf das Dateisystem
          path: '.'                      # Gibt den Pfad an, der gescannt werden soll (z.B. das gesamte Repository)
          format: 'template'
          template: '@/contrib/sarif.tpl'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'
